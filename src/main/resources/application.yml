spring:
  security:
    oauth2:
      client:
        registration:
          apple:
            client-id: [SERVICE_ID]          # Apple Developer Console에서 발급된 Client ID
            client-name: Apple
            client-authentication-method: client_secret_post # 기본값인 post를 지원하지 않으므로 명시적으로 설정
            authorization-grant-type: authorization_code
            redirect-uri: "https://[YOUR_DOMAIN]/login/oauth2/code/apple" # 인증 성공 후 리디렉션 URL
            scope:
              - email
              - name

          facebook:
            client-id: [CLIENT_ID]          # Facebook 애플리케이션 ID
            client-secret: [CLIENT_SECRET]  # Facebook 애플리케이션 Secret
            scope:
              - public_profile
              - email

          kakao:
            client-id: [내 애플리케이션 > 앱 설정 > 앱 키 에서 확인 가능한 REST API 키]
            client-secret: [내 애플리케이션 > 제품 설정 > 카카오 로그인 > 보안 에서 확인 가능한 Client Secret 코드]
            scope:
              - profile_nickname
              - profile_image
            authorization-grant-type: authorization_code
            redirect-uri: http://[YOUR_DOMAIN]/login/oauth2/code/kakao
            client-name: Kakao
            client-authentication-method: client_secret_post

          naver:
            client-id: [CLIENT_ID]
            client-secret: [CLIENT_SECRET]
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://[YOUR_DOMAIN]/login/oauth2/code/naver

          google:
            client-id: [CLIENT_ID]
            client-secret: [CLIENT_SECRET]
            scope:
              - profile
              - email
#              - openid

        provider:
          apple:
            authorization-uri: https://appleid.apple.com/auth/authorize?response_mode=form_post
            token-uri: https://appleid.apple.com/auth/token

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  thymeleaf:
    cache: false
#    prefix: classpath:/templates/
    
  datasource:
    url: jdbc:postgresql://localhost:5432/diary
    username: [USER_NAME]
    password: [USER_PASSWORD]
  mvc:
    hiddenmethod:
      filter:
        enabled: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: [YOUR_ACCOUNT]@gmail.com
    password: [PASSWORD]
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

mybatis:
  config-location: classpath:mybatis-config.xml
  type-aliases-package: com.woohahaapps.study.diary.domain

#springdoc:
#  swagger-ui:
#    csrf:
#      enabled: true

jwt:
  secret: [SECRET]
# openssl rand -hex 32 명령어로 생성

logging:
  level:
    org.springframework.security.oauth2: TRACE
    org.springframework.web: TRACE